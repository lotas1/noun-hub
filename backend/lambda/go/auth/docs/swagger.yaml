basePath: /{stage}
definitions:
  main.APIResponse:
    description: Standard response format for all API endpoints
    properties:
      data:
        description: Response data (if any)
      error:
        description: Error message (if any)
        example: Invalid input provided
        type: string
      message:
        description: Human-readable message about the result
        example: Operation completed successfully
        type: string
      success:
        description: Indicates if the operation was successful
        example: true
        type: boolean
    type: object
  main.ConfirmForgotPasswordRequest:
    properties:
      code:
        description: Verification code sent to the user's email
        example: "123456"
        type: string
      email:
        description: User's email address
        example: offorsomto50@gmail.com
        type: string
      new_password:
        description: New password to set
        example: NewPassword123!
        type: string
    type: object
  main.ForgotPasswordRequest:
    properties:
      email:
        description: User's email address
        example: offorsomto50@gmail.com
        type: string
    type: object
  main.GroupResponse:
    description: Response containing group information
    properties:
      description:
        description: Description of the group
        example: System administrators group
        type: string
      name:
        description: Name of the group
        example: admin
        type: string
    type: object
  main.RefreshTokenRequest:
    properties:
      refresh_token:
        description: Refresh token received during sign in
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  main.SignInRequest:
    properties:
      email:
        description: User's email address
        example: offorsomto50@gmail.com
        type: string
      password:
        description: User's password
        example: Password123!
        type: string
    type: object
  main.SignOutRequest:
    properties:
      global:
        description: Whether to invalidate tokens on all devices
        example: true
        type: boolean
    type: object
  main.SignUpRequest:
    properties:
      email:
        description: User's email address
        example: offorsomto50@gmail.com
        type: string
      password:
        description: User's password (must be at least 6 characters)
        example: Password123!
        type: string
    type: object
  main.UserProfileResponse:
    properties:
      email:
        description: User's email address
        example: offorsomto50@gmail.com
        type: string
      linked_providers:
        description: List of authentication providers linked to this account
        example:
        - '["google"]'
        items:
          type: string
        type: array
      username:
        description: User's unique username (UUID)
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
    type: object
info:
  contact:
    name: NounHub API Support
    url: https://www.nounhub.org
  description: Response containing user's group information
  title: NounHub Authentication API
  version: "1.0"
paths:
  /auth/confirm:
    post:
      consumes:
      - application/json
      description: Confirms a user's account using the verification code
      parameters:
      - description: Confirmation details
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Account confirmed successfully
          schema:
            $ref: '#/definitions/main.APIResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/main.APIResponse'
        "404":
          description: Account not found
          schema:
            $ref: '#/definitions/main.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.APIResponse'
      summary: Confirm user account
      tags:
      - Authentication
  /auth/confirm-forgot-password:
    post:
      consumes:
      - application/json
      description: Resets the user's password using the verification code
      parameters:
      - description: Password reset confirmation
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.ConfirmForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset successful
          schema:
            $ref: '#/definitions/main.APIResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/main.APIResponse'
        "404":
          description: Account not found
          schema:
            $ref: '#/definitions/main.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.APIResponse'
      summary: Reset password
      tags:
      - Authentication
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Sends a password reset code to the user's email
      parameters:
      - description: Password reset request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset code sent
          schema:
            $ref: '#/definitions/main.APIResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/main.APIResponse'
        "404":
          description: Account not found
          schema:
            $ref: '#/definitions/main.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.APIResponse'
      summary: Request password reset
      tags:
      - Authentication
  /auth/google:
    post:
      consumes:
      - application/json
      description: Authenticates a user with a Google OAuth token
      parameters:
      - description: Google OAuth token
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Successfully authenticated with Google
          schema:
            $ref: '#/definitions/main.APIResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/main.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.APIResponse'
      summary: Sign in with Google
      tags:
      - Authentication
  /auth/groups:
    get:
      consumes:
      - application/json
      description: Lists all available user groups
      produces:
      - application/json
      responses:
        "200":
          description: Groups retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/main.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/main.GroupResponse'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.APIResponse'
      security:
      - BearerAuth: []
      summary: List groups
      tags:
      - Groups
  /auth/groups/{group_name}/users:
    get:
      consumes:
      - application/json
      description: Lists all users in a specific group
      parameters:
      - description: Group name
        in: path
        name: group_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Users in group retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/main.APIResponse'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/main.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.APIResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/main.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.APIResponse'
      security:
      - BearerAuth: []
      summary: List users in group
      tags:
      - Groups
    post:
      consumes:
      - application/json
      description: Adds a user to a specific group
      parameters:
      - description: Group name
        in: path
        name: group_name
        required: true
        type: string
      - description: User details
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: User added to group successfully
          schema:
            $ref: '#/definitions/main.APIResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/main.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.APIResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/main.APIResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/main.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.APIResponse'
      security:
      - BearerAuth: []
      summary: Add user to group
      tags:
      - Groups
  /auth/groups/{group_name}/users/{username}:
    delete:
      consumes:
      - application/json
      description: Removes a user from a specific group
      parameters:
      - description: Group name
        in: path
        name: group_name
        required: true
        type: string
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User removed from group successfully
          schema:
            $ref: '#/definitions/main.APIResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/main.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.APIResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/main.APIResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/main.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.APIResponse'
      security:
      - BearerAuth: []
      summary: Remove user from group
      tags:
      - Groups
  /auth/profile:
    get:
      consumes:
      - application/json
      description: Retrieves the profile information for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Profile retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/main.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/main.UserProfileResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.APIResponse'
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - Profile
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refreshes the access token using a valid refresh token
      parameters:
      - description: Refresh token request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Tokens refreshed successfully
          schema:
            allOf:
            - $ref: '#/definitions/main.APIResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/main.APIResponse'
        "401":
          description: Invalid token
          schema:
            $ref: '#/definitions/main.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.APIResponse'
      summary: Refresh access token
      tags:
      - Authentication
  /auth/resend-confirmation:
    post:
      consumes:
      - application/json
      description: Resends the account confirmation code to the user's email
      parameters:
      - description: Email details
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Confirmation code sent
          schema:
            $ref: '#/definitions/main.APIResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/main.APIResponse'
        "404":
          description: Account not found
          schema:
            $ref: '#/definitions/main.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.APIResponse'
      summary: Resend confirmation code
      tags:
      - Authentication
  /auth/signin:
    post:
      consumes:
      - application/json
      description: Authenticates a user with email and password
      parameters:
      - description: Sign in request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully authenticated
          schema:
            $ref: '#/definitions/main.APIResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/main.APIResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/main.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.APIResponse'
      summary: Sign in to an existing account
      tags:
      - Authentication
  /auth/signout:
    post:
      consumes:
      - application/json
      description: Signs out the user from the current session or all sessions
      parameters:
      - description: Sign out request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.SignOutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Signed out successfully
          schema:
            $ref: '#/definitions/main.APIResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/main.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.APIResponse'
      security:
      - BearerAuth: []
      summary: Sign out
      tags:
      - Authentication
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Creates a new user account with the provided email and password
      parameters:
      - description: Sign up request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Account created successfully
          schema:
            $ref: '#/definitions/main.APIResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/main.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.APIResponse'
      summary: Create a new user account
      tags:
      - Authentication
  /auth/users/{username}/groups:
    get:
      consumes:
      - application/json
      description: Lists all groups a user belongs to
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User groups retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/main.APIResponse'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/main.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.APIResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/main.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.APIResponse'
      security:
      - BearerAuth: []
      summary: List user groups
      tags:
      - Groups
securityDefinitions:
  BearerAuth:
    description: 'Enter the token with the `Bearer: ` prefix, e.g. "Bearer abcde12345".'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
