{
  "swagger": "2.0",
  "info": {
    "title": "NounHub API",
    "version": "1.0.0"
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your JWT token in the format: Bearer <token>"
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "operationSortOrder": "path",
  "paths": {
    "/auth/confirm": {
      "post": {
        "description": "Verifies a user account with the confirmation code sent to their email",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authentication"
        ],
        "summary": "Confirm user registration",
        "parameters": [
          {
            "description": "Confirmation details",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Verification code sent to the user's email",
                  "type": "string",
                  "example": "123456"
                },
                "email": {
                  "description": "User's email address",
                  "type": "string",
                  "example": "offorsomto50@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account confirmed successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/auth/confirm-forgot-password": {
      "post": {
        "description": "Resets the user's password using the verification code",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authentication"
        ],
        "summary": "Complete password reset",
        "parameters": [
          {
            "description": "Password reset details",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Verification code sent to the user's email",
                  "type": "string",
                  "example": "123456"
                },
                "email": {
                  "description": "User's email address",
                  "type": "string",
                  "example": "offorsomto50@gmail.com"
                },
                "new_password": {
                  "description": "New password to set",
                  "type": "string",
                  "example": "NewPassword123!"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset successful",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "description": "Sends a password reset code to the user's email",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authentication"
        ],
        "summary": "Initiate password reset",
        "parameters": [
          {
            "description": "Email details",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "description": "User's email address",
                  "type": "string",
                  "example": "offorsomto50@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset code sent",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/auth/google": {
      "post": {
        "description": "Authenticates a user with a Google OAuth token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authentication"
        ],
        "summary": "Sign in with Google",
        "parameters": [
          {
            "description": "Google OAuth token",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully authenticated with Google",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Response data (if any)"
                    },
                    "error": {
                      "description": "Error message (if any)",
                      "type": "string",
                      "example": "Invalid input provided"
                    },
                    "message": {
                      "description": "Human-readable message about the result",
                      "type": "string",
                      "example": "Operation completed successfully"
                    },
                    "success": {
                      "description": "Indicates if the operation was successful",
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/auth/groups": {
      "get": {
        "security": [
          {}
        ],
        "description": "Lists all available user groups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Groups"
        ],
        "summary": "List all groups",
        "responses": {
          "200": {
            "description": "Groups retrieved successfully",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Response data (if any)"
                    },
                    "error": {
                      "description": "Error message (if any)",
                      "type": "string",
                      "example": "Invalid input provided"
                    },
                    "message": {
                      "description": "Human-readable message about the result",
                      "type": "string",
                      "example": "Operation completed successfully"
                    },
                    "success": {
                      "description": "Indicates if the operation was successful",
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "description": "Response containing group information",
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "Description of the group",
                            "type": "string",
                            "example": "System administrators group"
                          },
                          "name": {
                            "description": "Name of the group",
                            "type": "string",
                            "example": "admin"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/auth/groups/{groupName}/users": {
      "get": {
        "security": [
          {}
        ],
        "description": "Lists all users in a specific group (admin only)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Groups"
        ],
        "summary": "List users in a group",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the group",
            "name": "groupName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Users in group retrieved successfully",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Response data (if any)"
                    },
                    "error": {
                      "description": "Error message (if any)",
                      "type": "string",
                      "example": "Invalid input provided"
                    },
                    "message": {
                      "description": "Human-readable message about the result",
                      "type": "string",
                      "example": "Operation completed successfully"
                    },
                    "success": {
                      "description": "Indicates if the operation was successful",
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/auth/groups/{groupName}/users/{email}": {
      "post": {
        "security": [
          {}
        ],
        "description": "Adds a user to a specific group (admin only)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Groups"
        ],
        "summary": "Add user to group",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the group",
            "name": "groupName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Email of the user",
            "name": "email",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User added to group successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {}
        ],
        "description": "Removes a user from a specific group (admin only)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Groups"
        ],
        "summary": "Remove user from group",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the group",
            "name": "groupName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Email of the user",
            "name": "email",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User removed from group successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/auth/profile": {
      "get": {
        "security": [
          {}
        ],
        "description": "Retrieves the authenticated user's profile information",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authentication"
        ],
        "summary": "Get user profile",
        "responses": {
          "200": {
            "description": "Profile retrieved successfully",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Response data (if any)"
                    },
                    "error": {
                      "description": "Error message (if any)",
                      "type": "string",
                      "example": "Invalid input provided"
                    },
                    "message": {
                      "description": "Human-readable message about the result",
                      "type": "string",
                      "example": "Operation completed successfully"
                    },
                    "success": {
                      "description": "Indicates if the operation was successful",
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "description": "User's email address",
                          "type": "string",
                          "example": "offorsomto50@gmail.com"
                        },
                        "linked_providers": {
                          "description": "List of authentication providers linked to this account",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "[\"google\"]"
                          ]
                        },
                        "username": {
                          "description": "User's unique username (UUID)",
                          "type": "string",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "description": "Issues new access and ID tokens using a refresh token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh authentication tokens",
        "parameters": [
          {
            "description": "Refresh token details",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refresh_token": {
                  "description": "Refresh token received during sign in",
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tokens refreshed successfully",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Response data (if any)"
                    },
                    "error": {
                      "description": "Error message (if any)",
                      "type": "string",
                      "example": "Invalid input provided"
                    },
                    "message": {
                      "description": "Human-readable message about the result",
                      "type": "string",
                      "example": "Operation completed successfully"
                    },
                    "success": {
                      "description": "Indicates if the operation was successful",
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "401": {
            "description": "Invalid token",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/auth/resend-confirmation": {
      "post": {
        "description": "Sends a new confirmation code to the user's email",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authentication"
        ],
        "summary": "Resend confirmation code",
        "parameters": [
          {
            "description": "Email details",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "description": "User's email address",
                  "type": "string",
                  "example": "offorsomto50@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Confirmation code sent",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "description": "Authenticates a user and returns JWT tokens",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authentication"
        ],
        "summary": "Sign in a user",
        "parameters": [
          {
            "description": "User credentials",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "description": "User's email address",
                  "type": "string",
                  "example": "offorsomto50@gmail.com"
                },
                "password": {
                  "description": "User's password",
                  "type": "string",
                  "example": "Password123!"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully authenticated",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Response data (if any)"
                    },
                    "error": {
                      "description": "Error message (if any)",
                      "type": "string",
                      "example": "Invalid input provided"
                    },
                    "message": {
                      "description": "Human-readable message about the result",
                      "type": "string",
                      "example": "Operation completed successfully"
                    },
                    "success": {
                      "description": "Indicates if the operation was successful",
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/auth/signout": {
      "post": {
        "security": [
          {}
        ],
        "description": "Invalidates the user's tokens",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authentication"
        ],
        "summary": "Sign out user",
        "parameters": [
          {
            "description": "Sign out details",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "global": {
                  "description": "Whether to invalidate tokens on all devices",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Signed out successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "description": "Creates a new user account with email and password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "parameters": [
          {
            "description": "User registration details",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "description": "User's email address",
                  "type": "string",
                  "example": "offorsomto50@gmail.com"
                },
                "password": {
                  "description": "User's password (must be at least 6 characters)",
                  "type": "string",
                  "example": "Password123!"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account created successfully",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Response data (if any)"
                    },
                    "error": {
                      "description": "Error message (if any)",
                      "type": "string",
                      "example": "Invalid input provided"
                    },
                    "message": {
                      "description": "Human-readable message about the result",
                      "type": "string",
                      "example": "Operation completed successfully"
                    },
                    "success": {
                      "description": "Indicates if the operation was successful",
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/auth/users/{email}/groups": {
      "get": {
        "security": [
          {}
        ],
        "description": "Lists all groups a user belongs to (admin only)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Groups"
        ],
        "summary": "List user's groups",
        "parameters": [
          {
            "type": "string",
            "description": "Email of the user",
            "name": "email",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User groups retrieved successfully",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Response data (if any)"
                    },
                    "error": {
                      "description": "Error message (if any)",
                      "type": "string",
                      "example": "Invalid input provided"
                    },
                    "message": {
                      "description": "Human-readable message about the result",
                      "type": "string",
                      "example": "Operation completed successfully"
                    },
                    "success": {
                      "description": "Indicates if the operation was successful",
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Response data (if any)"
                },
                "error": {
                  "description": "Error message (if any)",
                  "type": "string",
                  "example": "Invalid input provided"
                },
                "message": {
                  "description": "Human-readable message about the result",
                  "type": "string",
                  "example": "Operation completed successfully"
                },
                "success": {
                  "description": "Indicates if the operation was successful",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/feed/categories": {
      "get": {
        "description": "Retrieve a list of all categories",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Categories"
        ],
        "summary": "Get all categories",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "data": {},
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {}
        ],
        "description": "Create a new category with the provided name",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Categories"
        ],
        "summary": "Create a new category",
        "parameters": [
          {
            "description": "Category information",
            "name": "category",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "TMA"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "data": {},
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not admin",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/feed/categories/{id}": {
      "put": {
        "security": [
          {}
        ],
        "description": "Update an existing category with a new name",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Categories"
        ],
        "summary": "Update a category",
        "parameters": [
          {
            "type": "string",
            "description": "Category ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Updated category information",
            "name": "category",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "TMA"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category updated",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "data": {},
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not admin",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {}
        ],
        "description": "Delete an existing category",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Categories"
        ],
        "summary": "Delete a category",
        "parameters": [
          {
            "type": "string",
            "description": "Category ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not admin",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/feed/posts": {
      "get": {
        "description": "Retrieve a list of posts, optionally filtered by category or author",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Posts"
        ],
        "summary": "Get all posts",
        "parameters": [
          {
            "type": "string",
            "description": "Filter by category ID",
            "name": "category_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter by author ID",
            "name": "author_id",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Limit the number of results (default 20)",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Pagination token for the next page",
            "name": "next_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "data": {},
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "author_id": {
                            "type": "string"
                          },
                          "body": {
                            "type": "string"
                          },
                          "category_id": {
                            "type": "string"
                          },
                          "collection_type": {
                            "description": "For GlobalCollectionIndex",
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "is_repost": {
                            "type": "integer"
                          },
                          "original_id": {
                            "type": "string"
                          },
                          "repost_type": {
                            "description": "\"repost\" or \"quote\"",
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {}
        ],
        "description": "Create a new post with the provided information",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Posts"
        ],
        "summary": "Create a new post",
        "parameters": [
          {
            "description": "Post information",
            "name": "post",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "type": "string",
                  "example": "All TMAs for semester 1 are due by Monday."
                },
                "category_id": {
                  "type": "string",
                  "example": "cat-123"
                },
                "title": {
                  "type": "string",
                  "example": "Important TMA Announcement"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post created",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "data": {},
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "author_id": {
                          "type": "string"
                        },
                        "body": {
                          "type": "string"
                        },
                        "category_id": {
                          "type": "string"
                        },
                        "collection_type": {
                          "description": "For GlobalCollectionIndex",
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "is_repost": {
                          "type": "integer"
                        },
                        "original_id": {
                          "type": "string"
                        },
                        "repost_type": {
                          "description": "\"repost\" or \"quote\"",
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/feed/posts/{id}": {
      "get": {
        "description": "Retrieve a specific post by its ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Posts"
        ],
        "summary": "Get a post by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Post ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "data": {},
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "author_id": {
                          "type": "string"
                        },
                        "body": {
                          "type": "string"
                        },
                        "category_id": {
                          "type": "string"
                        },
                        "collection_type": {
                          "description": "For GlobalCollectionIndex",
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "is_repost": {
                          "type": "integer"
                        },
                        "original_id": {
                          "type": "string"
                        },
                        "repost_type": {
                          "description": "\"repost\" or \"quote\"",
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Post not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {}
        ],
        "description": "Update an existing post with new information",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Posts"
        ],
        "summary": "Update a post",
        "parameters": [
          {
            "type": "string",
            "description": "Post ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Updated post information",
            "name": "post",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "type": "string",
                  "example": "All TMAs for semester 1 are due by next Friday."
                },
                "category_id": {
                  "type": "string",
                  "example": "cat-123"
                },
                "title": {
                  "type": "string",
                  "example": "Updated TMA Announcement"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post updated",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "data": {},
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "author_id": {
                          "type": "string"
                        },
                        "body": {
                          "type": "string"
                        },
                        "category_id": {
                          "type": "string"
                        },
                        "collection_type": {
                          "description": "For GlobalCollectionIndex",
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "is_repost": {
                          "type": "integer"
                        },
                        "original_id": {
                          "type": "string"
                        },
                        "repost_type": {
                          "description": "\"repost\" or \"quote\"",
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not post owner or admin",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {}
        ],
        "description": "Delete an existing post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Posts"
        ],
        "summary": "Delete a post",
        "parameters": [
          {
            "type": "string",
            "description": "Post ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not post owner or admin",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/feed/posts/{id}/repost": {
      "post": {
        "security": [
          {}
        ],
        "description": "Create a new post that references an existing post (repost or quote)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Posts"
        ],
        "summary": "Repost a post",
        "parameters": [
          {
            "type": "string",
            "description": "Post ID to repost",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Repost information",
            "name": "repost",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "type": "string",
                  "example": "This is really important for all students!"
                },
                "category_id": {
                  "type": "string",
                  "example": "cat-123"
                },
                "repost_type": {
                  "description": "\"repost\" or \"quote\"",
                  "type": "string",
                  "example": "repost"
                },
                "title": {
                  "type": "string",
                  "example": "My thoughts on this announcement"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Repost created",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "data": {},
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "author_id": {
                          "type": "string"
                        },
                        "body": {
                          "type": "string"
                        },
                        "category_id": {
                          "type": "string"
                        },
                        "collection_type": {
                          "description": "For GlobalCollectionIndex",
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "is_repost": {
                          "type": "integer"
                        },
                        "original_id": {
                          "type": "string"
                        },
                        "repost_type": {
                          "description": "\"repost\" or \"quote\"",
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not admin or moderator",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Original post not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "data": {},
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    }
  }
}